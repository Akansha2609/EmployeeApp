{"ast":null,"code":"var _jsxFileName = \"C:\\\\Akansha\\\\AKANSHA\\\\Personal\\\\POC Application\\\\EmployeeApp\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { loginUser } from '../actions/authActions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/Welcome#/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/Welcome#/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const loginUser = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.loginUser(loginUser);\n    console.log(loginUser);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Sign in to your account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        'is-invalid': errors.username\n      }),\n      placeholder: \"Username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 58\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control form-control-lg\", {\n        'is-invalid': errors.password\n      }),\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 58\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Akansha/AKANSHA/Personal/POC Application/EmployeeApp/client/src/components/Login.js"],"names":["React","Component","propTypes","connect","classnames","loginUser","Login","constructor","state","username","password","errors","onChange","bind","onSubmit","componentDidMount","props","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","setState","e","target","name","value","preventDefault","console","log","render","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {loginUser} from '../actions/authActions';\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            username: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.history.push('/Welcome#/dashboard');\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.auth.isAuthenticated){\r\n            this.props.history.push('/Welcome#/dashboard');\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const loginUser ={\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        };\r\n\r\n        this.props.loginUser(loginUser);\r\n        console.log(loginUser);\r\n    }\r\n    render (){\r\n        const {errors} = this.state;\r\n        return(\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Login</h1>\r\n                            <p className=\"lead text-center\">Sign in to your account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames (\"form-control form-control-lg\", {\r\n                                        'is-invalid': errors.username\r\n                                    })} \r\n                                    placeholder=\"Username\" name=\"username\" value={this.state.username} onChange={this.onChange}/>\r\n                                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames (\"form-control form-control-lg\", {\r\n                                        'is-invalid': errors.password\r\n                                    })}  \r\n                                    placeholder=\"Password\" name=\"password\" \r\n                                    value={this.state.password} onChange={this.onChange}/>\r\n                                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"  value=\"submit\"/> \r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nLogin.propTypes = {\r\n    loginUser: propTypes.func.isRequired,\r\n    auth: propTypes.object.isRequired,\r\n    errors: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\nexport default connect(mapStateToProps,{loginUser})(Login);\r\n"]},"metadata":{},"sourceType":"module"}